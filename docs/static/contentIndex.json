{"content/README":{"title":"README","links":[],"tags":[],"content":"Tekst blablabla"},"content/config-linux-vm":{"title":"config-linux-vm","links":[],"tags":[],"content":"Linux\nDeze handleiding gaat uit van Ubuntu 24.04. Wil je iets anders? Dan zul je sommige commando’s anders moeten gebruiken.\nPre-req\nOp dit moment moet je VM’s die in je skylab aanmaakt handmatig voorzien van de juiste netwerkinstellingen. Als je DHCP actief hebt op je pfsense kun je dit vrij eenvoudig doen.\nLog via de Skylab Remote Console in op het systeem met de student gebruiker. Voer dan het volgende commando uit:\nsudo vi /etc/netplan/99-netcfg-vmware.yaml\nAls sudo wachtwoord gebruik je ook het wachtwoord van student.\nHaal dan de onderste 2 regels weg, dus het IP adres en de regel met addresses. Verander dhcp4: no in dhcp4: yes.\nPas hierna de configuratie toe:\nsudo netplan apply\nen reboot de vm.\nLog nu via ssh in op het systeem, gebruik bv Windows Terminal of Putty hiervoor.\nInstalleer de pakketten git en unzip op het systeem:\nsudo apt install git unzip curl\nSSH\nWe gaan passwordless SSH logins gebruiken vanaf je laptop en ontwikkelmachine richting de VM’s die je aan gaat maken. Hiervoor moet je 3 ssh-keypairs aanmaken. 1 Om vanaf je laptop in te loggen naar je ontwikkelmachine, en 1 om vanaf je ontwikkelmachine in te loggen op de VM’s die we met Terraform gaan maken. Het laatste keypair is voor Azure.\nMaak daarom een ssh keypair aan voor de student user (of voor een andere user die gaat gebruiken) op je Linux ontwikkel VM. We gebruiken een ED25519 key omdat deze kort is.\nHerhaal dit commando dus 3x en gebruik verschillende namen. Bijvoorbeeld devhost, skylab en azure\nssh-keygen -t ed25519\nIn de directory /home/student/.ssh staan nu 6 bestanden. 3 private en 3 public keys.\nDe ‘devhost’ private key kopieer je naar je eigen laptop. Dan kun je passwordless inloggen via een terminal of VSCode. Zet daarom deze private key file in “C:\\Users\\je gebruikersnaam.ssh” Dit kun je bijvoorbeeld doen door een nieuwe file in die directory te maken met de inhoud van de file /home/student/.ssh/devhost\nZet vervolgens de inhoud van /home/student/.ssh/devhost.pub in /home/student/.ssh/authorized_keys bijvoorbeeld dus zo:\nstudent@ubuntu:~/.ssh$ cat authorized_keys\nssh-ed25519 AAAAHierstaateensupergeheimesshed25519key/blabla student@lokale-laptop\nLet op: het bestand /home/student/.ssh/authorized_keys moet alleen write rechten voor de owner hebben (tip: chmod 400 authorized_keys)\nAls laatste upload je de azure publieke key naar Azure. Zie hiervoor learn.microsoft.com/en-us/azure/virtual-machines/ssh-keys-portal en dan ‘Upload a ssh key’.\nGitlab\nVoor onze code gaan we de gitlab omgeving van Windesheim gebruiken. Ga in een browser naar gitlab.windesheim.nl en log in. Maak vervolgens een Personal Access Token aan en bewaar dit op een goeie plek (hint: password manager)\nVoor onze ontwikkelomgeving hebben we een aantal bestanden nodig. Deze staan in de files directory van deze repo.\nAls er gevraagd om met je gegevens in te loggen, gebruik dan je Windesheim email en net gemaakte Personal Access Token als wachtwoord.\nClone nu deze repo naar je ontwikkel VM\ngit clone gitlab.windesheim.nl/fe2157786/ict-ids-iac.git\nDaarna maak je in de root van je homedir een bestand met de naam .netrc aan (let op de punt)\nDaar zet je de volgende informatie in:\nmachine gitlab.windesheim.nl\nlogin oauth2\npassword jouwpersonalaccesstoken\n \nInstallatie OVFTool\nIn de bovenstaande Git repo vind je een directory files. Daarin staat een installatie bestand voor OVFTool.\nVoer de volgende commando’s uit vanuit de /files directory:\nunzip VMware-ovftool-&lt;versie&gt;-lin.x86_64.zip\nIn de files directory doe je het volgende :\nsudo mv ovftool vmware-ovftool\nsudo mv vmware-ovftool /usr/bin/\nsudo chmod +x /usr/bin/vmware-ovftool/ovftool.bin\nsudo chmod +x /usr/bin/vmware-ovftool/ovftool\nVoer nu het volgende commando uit, als je een andere gebruiker dan de default user ‘student’ gebruikt moet je dit aanpassen.\nsed -i &#039;$ a\\PATH=$PATH:/home/student/.local/bin:/usr/bin/vmware-ovftool&#039; ~/.bashrc\nPIP\nWe installeren Ansible via PIP. Daardoor is het noodzakelijk dat PIP op het systeem staat.\nsudo apt-get update &amp;&amp; sudo apt-get install -y gnupg software-properties-common python3-pip pipx\nVoeg het juiste path toe aan je profiel\npipx ensurepath\nTerraform\nwget -O- apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg\necho &quot;deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] apt.releases.hashicorp.com $(lsb_release -cs) main&quot; | sudo tee /etc/apt/sources.list.d/hashicorp.list\nsudo apt-get update &amp;&amp; sudo apt-get install terraform\nAnsible\nWanneer pip succesvol is geinstalleerd kan Ansible worden geinstaleerd.\npipx install --include-deps ansible\npipx install ansible-lint\nLog als laatste actie uit en weer opnieuw in."}}