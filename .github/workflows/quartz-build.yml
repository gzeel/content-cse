name: Build and Deploy Quartz Site

on:
  push:
    branches:
      - main # Set this to your default branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Needed for correct git history
          token: ${{ secrets.PAT }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22"

      - name: Clone Quartz
        run: |
          git clone https://github.com/jackyzha0/quartz.git temp_quartz

      - name: Setup and Configure Quartz
        run: |
          cd temp_quartz
          npm install

          # Copy your content files to the Quartz content directory
          mkdir -p content
          cp -r ../* content/ 2>/dev/null || true
          # Avoid copying temp_quartz folder into itself
          rm -rf content/temp_quartz

          # Create a Tokyo Night theme configuration
          mkdir -p styles
          cat > styles/tokyo-night.scss << 'EOL'
          @use "sass:color";

          // Tokyo Night theme colors
          :root {
            --tokyo-night-bg: #1a1b26;
            --tokyo-night-fg: #a9b1d6;
            --tokyo-night-accent: #7aa2f7;
            --tokyo-night-accent-2: #bb9af7;
            --tokyo-night-muted: #565f89;
            --tokyo-night-highlight: #292e42;
            --tokyo-night-link: #7dcfff;
            --tokyo-night-code-bg: #24283b;
          }

          [saved-theme="dark"] {
            --background: var(--tokyo-night-bg);
            --lightgray: var(--tokyo-night-highlight);
            --gray: var(--tokyo-night-muted);
            --darkgray: var(--tokyo-night-fg);
            --text: var(--tokyo-night-fg);
            --dark-text: var(--tokyo-night-fg);
            --secondary: var(--tokyo-night-accent-2);
            --tertiary: var(--tokyo-night-accent);
            --highlight: var(--tokyo-night-accent);
            --link: var(--tokyo-night-link);
            --headers: var(--tokyo-night-accent);
            --code-bg: var(--tokyo-night-code-bg);
          }
          EOL

          # Update quartz.config.ts to use the new theme
          sed -i 's/style: "default",/style: "tokyo-night",/g' quartz.config.ts
          sed -i 's/allowedStyles: \["default"\],/allowedStyles: ["default", "tokyo-night"],/g' quartz.config.ts

          # Create a custom component configuration to disable header and footer
          cat > quartz.layout.ts << 'EOL'
          import { PageLayout, SharedLayout } from "./quartz/cfg"
          import * as Component from "./quartz/components"

          // This is the layout configuration for your Quartz site
          export const sharedLayout: SharedLayout = {
            head: Component.Head(),
            header: [], // Empty array disables the header
            footer: [], // Empty array disables the footer
          }

          export const defaultLayout: PageLayout = {
            beforeBody: [
              Component.Breadcrumbs(),
              Component.ArticleTitle(),
              Component.ContentMeta(),
              Component.TagList(),
            ],
            left: [
              Component.PageTitle(),
              Component.MobileOnly(Component.Spacer()),
              Component.Search(),
              Component.Darkmode(),
              Component.DesktopOnly(Component.Explorer()),
            ],
            right: [
              Component.Graph(),
              Component.DesktopOnly(Component.TableOfContents()),
              Component.Backlinks(),
            ],
          }
          EOL

      - name: Build Quartz Site
        run: |
          cd temp_quartz
          npx quartz build

      - name: Commit HTML to Content Branch
        run: |
          # Create docs directory if it doesn't exist
          mkdir -p docs

          # Copy the generated files
          cp -r temp_quartz/public/* docs/

          # Configure git
          git config user.name "GitHub Actions"
          git config user.email "github-actions@github.com"

          # Create and checkout a new branch called 'content'
          git checkout -B content

          # Stage, commit, and push the changes
          git add docs/
          git commit -m "Add generated HTML files [skip ci]" || echo "No changes to commit"
          git push https://x-access-token:${{ secrets.PAT }}@github.com/${{ github.repository }}.git HEAD:content --force
